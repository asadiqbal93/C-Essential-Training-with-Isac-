/*
===========================================================================================
                                Passing variables to functions

                                Parameters vs. Arguments
                -Functions are mini programs , which may or may not use external data.
                -Parameters are variables defined to accept external data.
                -Arguments are the data passed onto the function.

                                Functions WITHOUT Parameters

                A function that does not use external data

                void addNumbers(void){
                    float x = 2.4;
                    float y = 3.1;
                    result = x +y;
                    printf("sum = %f",result);

                }
                addNumbers(); --The function call without arguments--
                _________________________________________________________________

                                Functions WITH parameters

                A function that uses external data

                void addNumbers(float x, float y) {
                    result = x + y;
                    printf("Sum = %f , result);

                }
                --The function is called with two arguments--
                addNumbers(2.6 , 4.2);

===========================================================================================
*/
/*
===========================================================================================
Name: functionalProgramming.c
Author: Asad Iqbal
Version: 1.0
Copyright: asadiqbal93
Description: Passing variables to functions , azzy-style
             This is an example of functional programming , in which the user interacts
             with an ATM to debit or credit an account.
             The program performs 3 transactions. The last two transactions also include
             adding a monetary gift to the account

===========================================================================================
*/



#include <stdio.h>
#include <stdlib.h>

//Global variables
float accountBalance , amount;

//prototypes declarations
void initializeAccount();
void getBalance(void);
void askCustomer(void);
void updateAccount(float value);
void addGift(float giftAmount);
void thankYou(void);

int main(void){

        int transactionCounter = 0;
        initializeAccount();
        getBalance();
        //Perform first transaction
        askCustomer();
        updateAccount(amount);
        getBalance();
        //Perform second transaction
        askCustomer();
        updateAccount(amount);
        addGift(5.0);
        getBalance();
        //Peform third transaction
        askCustomer();
        updateAccount(amount);
        addGift(2.0);
        getBalance();
        thankYou();

}

void initializeAccount(void){

        accountBalance = 0.0;
}

void addGift(float giftAmount){

        accountBalance += giftAmount;
        printf("Congratulations! A gift of $%.2f has been added to your account\n",giftAmount);

}

void askCustomer(void){

        printf("Next transaction please..\n");
        printf("Enter the amount to credit(positive) or debit (negative):");
        scanf("%f",&amount);

}

void getBalance(void){

        printf("\nThe current balance in the account is $%.2f\n",accountBalance);
}

void updateAccount(float amount){

       accountBalance += amount;
       printf("The account was updated with $%.2f\n",amount);

}

void thankYou(void){

        printf("------ Thank you! ------");


}

