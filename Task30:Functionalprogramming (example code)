/*
 Functions
 -Block of code that perform specific task:
  - Calculate  a mathematical expression
  - Evaluate the outcome of a series of statements
  - Print results in a specific format
  Functional Programming
  Advantages
  - Enables re usability of portions of code
  - Enables breaking complex solutions into simpler steps
  - Simplifies the debugging process
  - Eases the processes of updating and improving code


*/
/*
===========================================================================================
Name: functionalProgramming.c
Author: Asad Iqbal
Version: 1.0
Copyright: asadiqbal93
Description: Functional programming , azzy-style this program assess the number of empty
            seats in each one of three rooms. It then ask the user to enter the number of
            waiting visitors for each room. It assess each room still has vacant seats ,
            the overall capacity, and the average number of visitors waiting per room.

===========================================================================================
*/

#include <stdio.h>
#include <stdlib.h>

//Function prototypes definitions
void assessRoomCapacities(void);
void estimateWaitingVisitors(void);
void processData(void);
void generateReport(void);

//Global variables - values are known throughout the program.
int room1,room2,room3;
int visitors1,visitors2,visitors3;
int totalAvailableSeats,totalWaitingVisitors;

int main(void){
    assessRoomCapacities();
    estimateWaitingVisitors();
    processData();
    generateReport();

    return 0;

}
//Functions are defined below

void assessRoomCapacities(){
    //Ask the user to provide the number of empty seats in each room
    printf("Enter seats left in room1:");
    scanf("%d",&room1);
    printf("Enter seats left in room2:");
    scanf("%d",&room2);
    printf("Enter seats left in room3:");
    scanf("%d",&room3);

}
void estimateWaitingVisitors(){
     //Ask the user to provide the number of visitors waiting for each room
     printf("Enter number of visitors waiting for room 1:");
     scanf("%d",&visitors1);
     printf("Enter number of visitors waiting for room 2:");
     scanf("%d",&visitors2);
     printf("Enter number of visitors waiting for room 3:");
     scanf("%d",&visitors3);

}

void processData(){
 totalAvailableSeats = room1 + room2 + room3;
 totalWaitingVisitors = visitors1 + visitors2 +visitors3;

}

void generateReport(){

    puts("=======================================================================");
    printf("Overall there are still seats available (1=YES , 0=NO): %d \n",(totalAvailableSeats > totalWaitingVisitors));
    printf("Room 1 can accept more visitors (1=YES , 0=NO): %d \n",(room1 >visitors1));
    printf("Room 2 can accept more visitors (1=YES , 0=NO): %d \n",(room2 >visitors2));
    printf("Room 3 can accept more visitors (1=YES , 0=NO): %d \n",(room3 >visitors3));
    printf("On average , there are %.2f visitors waiting per room \n",(visitors1+visitors2+visitors3));


}
